# -*- coding: utf-8 -*-
"""2.1 - Repositorio de software compartido que contendrÃ¡ los componentes desarrollados en esta fase..ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DRC006bG80K4CVw44Th9dLUh4wW4PJJM
"""

#En esta clase, la clase Mascota tiene mÃ©todos para alimentar y jugar con la mascota, y un mÃ©todo especial para determinar su estado emocional.
#TambiÃ©n utilize propiedades para acceder al nombre, edad y nivel de felicidad de la mascota, y le agregue emojis para darle un toque chido.


import random

class Mascota:
    def __init__(self, nombre, edad):
        self._nombre = nombre
        self._edad = edad
        self._nivel_felicidad = 50

    @property
    def nombre(self):
        return f"ðŸŒŸ{self._nombre}ðŸŒŸ"  # Agrega emojis al nombre de la mascota

    @property
    def edad(self):
        return f"{self._edad} aÃ±os"  # Devuelve la edad de la mascota

    @property
    def nivel_felicidad(self):
        return self._nivel_felicidad  # Devuelve el nivel de felicidad de la mascota

    def alimentar(self):
        print(f"{self.nombre} dice: Â¡Ã‘am Ã±am! Â¡Gracias por la comida!")  # Imprime un mensaje al alimentar
        self._nivel_felicidad += 10

    def jugar(self):
        print(f"{self.nombre} dice: Â¡Estoy tan feliz jugando contigo!")  # Imprime un mensaje al jugar
        self._nivel_felicidad += random.randint(5, 15)  # Aumenta la felicidad de forma aleatoria

    def estado_emocional(self):
        if self._nivel_felicidad >= 70:
            return "Â¡Estoy muy feliz!"  # Retorna mensaje si la mascota estÃ¡ muy feliz
        elif 50 <= self._nivel_felicidad < 70:
            return "Estoy contento."  # Retorna mensaje si la mascota estÃ¡ contenta
        else:
            return "Estoy un poco triste. Â¿Podemos jugar mÃ¡s?"  # Retorna mensaje si la mascota estÃ¡ triste

# Crear una instancia de la clase Mascota
mi_mascota = Mascota(nombre="Firulais", edad=2)

# Interactuar con la mascota
mi_mascota.alimentar()
mi_mascota.jugar()

# Obtener informaciÃ³n y estado emocional de la mascota
nombre_mascota = mi_mascota.nombre
edad_mascota = mi_mascota.edad
estado_emocional_mascota = mi_mascota.estado_emocional()

# Mostrar resultados
nombre_mascota, edad_mascota, estado_emocional_mascota